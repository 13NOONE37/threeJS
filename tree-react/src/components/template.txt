import React, { useEffect, useRef } from 'react';
import * as THREE from 'three';

export default function Lesson1() {
  const box = useRef(null);

  useEffect(() => {
    let scene, camera, renderer;

    scene = new THREE.Scene();
    camera = new THREE.PerspectiveCamera(
      44,
      window.innerWidth / window.innerHeight,
      0.1,
      1000,
    );
    camera.position.set(0, 0, 50);

    renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });
    renderer.setSize(window.innerWidth, window.innerHeight);
    box.current.appendChild(renderer.domElement);

    const handleResize = () => {
      const { innerWidth, innerHeight } = window;
      renderer.setSize(innerWidth, innerHeight);
      camera.aspect = innerWidth / innerHeight;
      camera.updateProjectionMatrix();
    };

    const loop = () => {
      renderer.render(scene, camera);

      requestAnimationFrame(loop);
    };
    loop();
    window.addEventListener('resize', handleResize);
  }, []);
  return <div ref={box}></div>;
}
